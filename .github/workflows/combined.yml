name: Test, Coverage, and Auto Version Bump

on:
  push:
  pull_request:

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Run pre-commit checks
        run: poetry run pre-commit run --all-files
      - name: Run tests, enforce coverage threshold (warn on fail, only fail on main)
        run: |
          poetry run pytest --cov=kaiano_common_utils --cov-report=term-missing || EXIT_CODE=$?
          if [ "${EXIT_CODE:-0}" -eq 2 ]; then
            echo "Warning: Coverage did not reach the required threshold."
            #if [ "${{ github.ref }}" = "refs/heads/main" ]; then
              #echo "Failing build on main branch due to coverage threshold."
              #exit 2
            #fi
          elif [ "${EXIT_CODE:-0}" -ne 0 ]; then
            exit $EXIT_CODE
          fi

  bump:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Poetry
        run: pip install poetry
      - name: Auto Increment Patch
        run: |
          CURRENT_VERSION=$(poetry version -s)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_VERSION="$major.$minor.$((patch+1))"
          poetry version $NEW_VERSION
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "ðŸ”– Bump version to $NEW_VERSION"
          git tag -a "v$NEW_VERSION" -m "Release $NEW_VERSION"
          git push --follow-tags